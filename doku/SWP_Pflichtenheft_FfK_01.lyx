#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrartcl
\begin_preamble
\usepackage{scrlayer-scrpage}
\lohead{Pflichtenheft}
\rohead{Filmverwaltung für Kinoabspielringe}
\pagestyle{scrheadings}
\setheadsepline{.4pt}%Kopflinie unter Kapitelüberschrift
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Pflichtenheft Filmverwaltung für Kinoabspielringe"
\pdf_author "Christian Engler"
\pdf_subject "SIn13 Softwarprojekt"
\pdf_keywords "Kino, Sozialinformatik"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{titlepage}
\end_layout

\begin_layout Plain Layout


\backslash
end{titlepage}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size large
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabbing}
\end_layout

\begin_layout Plain Layout

Anzahl Seiten insgesamt:x
\backslash
= 
\backslash
kill
\end_layout

\begin_layout Plain Layout

Titel: 
\backslash
>Pflichtenheft 
\backslash

\backslash
 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Projekt: 
\backslash
> Filmverwaltung für Kinoabspielringe (FfK)
\backslash

\backslash
 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Autor des Dokumentes: 
\backslash
>   Christian Engler 
\backslash

\backslash
 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Matrikelnummer: 
\backslash
>   438 471
\backslash

\backslash
 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Erstellungsdatum: 
\backslash
> 29.05.2017  
\backslash

\backslash
 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Anzahl Seiten insgesamt: 
\backslash
> 27  
\backslash

\backslash
 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Version: 
\backslash
> 1.7  
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{tabbing}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{page}{0}
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{roman}
\end_layout

\begin_layout Plain Layout

%
\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{scrheadings}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Zielbestimmungen 
\end_layout

\begin_layout Subsection
Kernziele
\end_layout

\begin_layout Standard
Der Landesverband Filmkommunikation e.V.
 (LVFK) wird durch das Produkt in die Lage versetzt Kinoabspielringe bei
 ihrer Organisation zu unterstützen.
 
\end_layout

\begin_layout Standard
Es können mehrere Kinoabspielringe angelegt werden, welche von den jeweiligen
 Abspielringen ohne weiteres Zutun des Landesverbandes verwaltet und gepflegt
 werden können.
\end_layout

\begin_layout Standard
Innerhalb eines Abspielringes gibt es folgende Möglichkeiten.
\end_layout

\begin_layout Itemize
Im System können Spielorte verwaltet werden.
\end_layout

\begin_layout Itemize
Im System können Verleier verwaltet werden.
\end_layout

\begin_layout Itemize
Im System können Benutzer verwaltet werden.
\end_layout

\begin_layout Itemize
Im System gibt es einen oder mehrere Koordinatoren.
\end_layout

\begin_layout Itemize
Im System können Filme verwaltet werden.
\end_layout

\begin_layout Itemize
Im System können Daten zu Filmverleihern verwaltet werden.
\end_layout

\begin_layout Itemize
Im System können Filmbestellungen verwaltet werden.
\end_layout

\begin_layout Standard
Spielorten zugeordnete Benutzer haben folgende Möglichkeiten:
\end_layout

\begin_layout Itemize
Filmwünsche ins System einstellen (Filme, welche sie gerne spielen würden).
\end_layout

\begin_layout Itemize
Andere Filmwünsche sehen und Mitspielinteresse bekunden.
\end_layout

\begin_layout Itemize
Im System als 
\begin_inset Quotes gld
\end_inset

buchbar
\begin_inset Quotes grd
\end_inset

 markierte Filme für ein bestimmtes Datum buchen.
\end_layout

\begin_layout Itemize
Die Besucherzahlen je Eintrittspreis für einen bestimmten Film ins System
 eingeben.
\end_layout

\begin_layout Standard
Koordinatoren zugeordnete Benutzer haben folgende Möglichkeiten:
\end_layout

\begin_layout Itemize
Filme ins System einstellen
\end_layout

\begin_layout Itemize
Filmvorschläge ins System einstellen.
\end_layout

\begin_layout Itemize
Filmwünsche der Spielorte einsehen
\end_layout

\begin_layout Itemize
Filme im System als 
\begin_inset Quotes gld
\end_inset

buchbar
\begin_inset Quotes grd
\end_inset

 markierten.
\end_layout

\begin_layout Itemize
Im System einen Starttermin für die Verleihbuchung setzen (Wartezeit zwischen
 Buchung beim Verleih und Buchbarkeit für Spielorte).
\end_layout

\begin_layout Itemize
Buchbare Filme mit dem Verleihstatus versehen (offen, bestätigt, abgelehnt).
\end_layout

\begin_layout Itemize
Das System stellt eine Übersicht über alle gebuchten Filme (beim Verleih
 und von den Spielorten) zur Verfügung.
\end_layout

\begin_layout Standard
Einem Filmverleiher stehen folgende Funktionen zur Verfügung.
\end_layout

\begin_layout Itemize
Der Verleih sieht die bei ihm vom Abspielring angefragten Filme mit Status
 (offen, bestätigt, abgelehnt).
\end_layout

\begin_layout Itemize
Der Verleih sieht die Buchungen (seiner Filme) der Spielstätten innerhalb
 des Abspielringes.
\end_layout

\begin_layout Itemize
Der Verleih sieht die Besucherzahlen je Eintrittspreis zu jeder Vorführung
 (seiner Filme).
\end_layout

\begin_layout Subsection
Unterziele
\end_layout

\begin_layout Standard
Spielorten zugeordnete Benutzer haben folgende weitere Funktionen:
\end_layout

\begin_layout Itemize
Der Benutzer kann durch Übernahme der Mindestgarantie einen Film als buchbar
 markieren.
\end_layout

\begin_layout Itemize
Der Benutzer wird vom System an die fehlende Eingabe von Besucherdaten via
 Email erinnert.
\end_layout

\begin_layout Itemize
Der Benutzer kann einen Filmwunsch mit einem Wunschzeitraum versehen
\end_layout

\begin_layout Itemize
Der Benutzer erhält eine Erinnerungsmail, wenn ein von ihm gebuchter Film
 X Tage vor Start noch nicht vom Verleih bestätigt ist
\end_layout

\begin_layout Standard
Koordinatoren zugeordnete Benutzer haben folgende Möglichkeiten:
\end_layout

\begin_layout Itemize
Sie können jedem als buchbar markierten Film im System eine Mitteilung hinzuzufü
gen.
\end_layout

\begin_layout Itemize
Die Übersicht aller gebuchten Filme ist als Excel-Formular exportierbar.
\end_layout

\begin_layout Itemize
Sie werden vom System an die fehlende Eingaben von Besucherdaten via Email
 erinnert.
\end_layout

\begin_layout Itemize
Sie werden vom System an in dieser Woche beim Verleih zu buchenden Filme
 via Email erinnert.
\end_layout

\begin_layout Itemize
Der Benutzer erhält eine Erinnerungsmail, wenn ein von ihm gebuchter Film
 X Tage vor Start noch nicht vom Verleih bestätigt ist
\end_layout

\begin_layout Itemize
Das System generiert eine Emailvorlage zur externen Filmbuchung und kann
 diese auf Knopfdruck dem Verleih zusenden.
\end_layout

\begin_layout Itemize
Das System stellt für jeden Spielort am Ende eines Monates ein Abrechnung
 vor.
\end_layout

\begin_layout Subsection
Abgrenzungen
\end_layout

\begin_layout Standard
Die Anwendung ist kein Buchhaltungsprogramm.
 Es werden keine Zahlungsein- oder Zahlungsausgänge vermerkt.
\end_layout

\begin_layout Standard
Es werden keine fremder Formulare für Verleiher oder die GEMA ausgefüllt.
\end_layout

\begin_layout Section
Produkteinsatz
\end_layout

\begin_layout Subsection
Anwendungsbereiche
\end_layout

\begin_layout Standard
Das Produkt unterstützt Kinoabspielringe bei ihrer inneren Organisation
 und Koordination.
\end_layout

\begin_layout Subsection
Zielgruppen 
\end_layout

\begin_layout Subsubsection*
Die Koordinatoren des jeweiligen Abspielringes
\end_layout

\begin_layout Standard
Sie sammeln die Wünsche der unterschiedlichen Spielorte und stellen diesen
 ein buchbares Programm zur Verfügung.
 Sie buchen die Filme bei den jeweiligen Verleihern und koordinieren die
 Bespielung der Abspielorte.
 Sie stellen die Rechnungen an die jeweiligen Abspielstätten.
\end_layout

\begin_layout Subsubsection*
Die unterschiedlichen Spielstätten eines Abspielringes
\end_layout

\begin_layout Standard
Sie können Filmwünsche einreichen und aus einem bestehenden Programm wählen.
\end_layout

\begin_layout Subsubsection*
Die involvierten Filmverleiher
\end_layout

\begin_layout Standard
Sie sehen die bei ihnen gebuchten Filme.
 Bei bereits gespielten Filmen sehen sie tagesaktuell die Einspielergebnisse.
\end_layout

\begin_layout Section
Produktumgebung
\end_layout

\begin_layout Standard
Das Produkt wird auf einem über das Internet erreichbaren Server implementiert.
 Der Zugang beträgt mindestens 10 MBit/Sekunde.
\end_layout

\begin_layout Standard
Es ist für die Zielgruppen über einen Webbrowser mit mindestens 1024x786
 Pixel bedienbar.
 Der Browser muss Javascript und Websockets unterstützt.
 Der Zugang sollte mindestens 786KBit/Sekunde betragen.
\end_layout

\begin_layout Standard
Das System wird vom Auftragnehmer implementiert und von einer noch zu bestimmend
en Kraft gewartet werden.
\end_layout

\begin_layout Section
Produktfunktionen
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Primäre_Prozesse.jpg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Subsection
Geschäftsprozess Disponieren
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Filme_disponieren.jpg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Kernziele
\end_layout

\begin_layout Standard
#26 Eingehende Anfragen und konkrete Buchungen werden dem Film zugeordnet
 angezeigt
\end_layout

\begin_layout Standard
#4 Die Rolle Spielstätte und Koordinator können alle vorhandenen Anfragen
 anzeigen
\end_layout

\begin_layout Standard
#5 Spielstätte kann Mitspielinteresse an einer Anfragen im System vermerken
\end_layout

\begin_layout Standard
#6 Spielstätte kann neue Anfragen eingeben.
 Dazu ist die Eingabe des Filmtitels erforderlich
\end_layout

\begin_layout Standard
#7 zu einer vorhandenen Anfragen wird die Anzahl der wünschenden Spielstätte
 angezeigt
\end_layout

\begin_layout Standard
#8 Spielstätte kann einen vom Koordinator als „intern buchbar“ markierten
 Film buchen
\end_layout

\begin_layout Standard
#9 Jeder gebuchte Film erhält eine eindeutige Nummer
\end_layout

\begin_layout Standard
#10 Der Koordinator kann einen Filmwunsch mit Anfangs und Enddatum als „intern
 buchbar“ setzen
\end_layout

\begin_layout Standard
#11 Der Koordinator kann einen Starttermin für die Verleihbuchung setzen
 (Wartezeit)
\end_layout

\begin_layout Standard
#12 „intern buchbar“ gesetzte Filme haben den Status offen oder vom Verleih
 bestätigt
\end_layout

\begin_layout Subsubsection
Unterziele
\end_layout

\begin_layout Standard
#27 Eingehende Anfragen und konkrete Buchungen werden in einer Tabelle mit
 den gesetzten Filmen angezeigt.
 Die gesetzten Filme sind dabei schwach sichtbar
\end_layout

\begin_layout Standard
#13 zu einer vorhandenen Anfragen können die anfragenden Kinos angezeigt
 werden
\end_layout

\begin_layout Standard
#14 Eine Spielstätte kann eine Anfragen mit einem Wunschtermin versehen
\end_layout

\begin_layout Standard
#15 Eine Spielstätte kann durch Übernahme der Mindestgarantie einen Film
 als „intern buchbar“ markieren und buchen
\end_layout

\begin_layout Standard
#16 Jeder Wunsch hat einen Status: neu, buchbar, abgelehnt, wartend
\end_layout

\begin_layout Standard
#17 jedem gesetzten Film kann vom Koordinator eine Mitteilung hinzugefügt
 werden
\end_layout

\begin_layout Standard
#18 Der Koordinator kann Filme anzeigen lassen, welche in dieser Woche gebucht
 werden müssen
\end_layout

\begin_layout Standard
#19 Eine Spielstätte kann einen Filmwunsch mit einem Wunschzeitraum versehen
\end_layout

\begin_layout Standard
#20 Der Koordinator erhält eine Erinnerungsmail, wenn ein gesetzter Film
 X Tage vor Start noch nicht vom Verleih bestätigt ist
\end_layout

\begin_layout Standard
#21 Eine Spielstätte erhält eine Erinnerungsmail, wenn ein gebuchter Film
 X Tage vor Start noch nicht vom Verleih bestätigt ist
\end_layout

\begin_layout Standard
#22 Das System generiert eine Email-Vorlage zur externen Filmbuchung und
 kann diese auf Knopfdruck dem Verleih zusenden
\end_layout

\begin_layout Standard
#23 Eine externe Buchung hat den Status offen, angefragt, zugesagt, bestätigt
\end_layout

\begin_layout Standard

\strikeout on
#24 Das System kann den Email-Verkehr zu einer externen Filmbuchung anzeigen
\end_layout

\begin_layout Subsection
Geschäftsprozess Abrechnung
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Filme_abrechnen.jpg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Subsubsection
Kernziele
\end_layout

\begin_layout Standard
#42 Die an die FFA zu meldenden Informationen werden bereitgestellt
\end_layout

\begin_layout Standard
#45 Rechnungen für die Kinos können monatlich als ods und pdf exportiert
 werden
\end_layout

\begin_layout Standard
#39 Die Spielstätten können über ein Interface ihre Besucherzahlen eintragen
\end_layout

\begin_layout Subsubsection
Unterziele
\end_layout

\begin_layout Standard
#44 GEMA Jahresmeldungen können als ods und pdf exportiert werden
\end_layout

\begin_layout Standard
#40 Die Eintrittspreise eines Kinos sind für die Eingabe der Besucherzahlen
 bereits hinterlegt
\end_layout

\begin_layout Standard
#41 Sind am Folgetag einer Aufführung um 10:00 Uhr die Besucherzahlen noch
 nicht eingetragen, sendet das System Emails an den Koordinator und das
 betreffende Kino
\end_layout

\begin_layout Standard
#43 Die unterschiedlichen GEMA-Eigenschaften der Kinos können hinterlegt
 werden.
\end_layout

\begin_layout Subsection
Allgemeine Anforderungen
\end_layout

\begin_layout Subsubsection
Kernziele
\end_layout

\begin_layout Standard
#1 Ein Spielort ist immer einer Leinwand zugeordnet.
 Einer Leinwand können mehrere Kinos zugeordnet sein
\end_layout

\begin_layout Standard
#2 Benutzer können den Rollen Spielstätte, Koordinator zugeordnet werden
\end_layout

\begin_layout Standard
#3 Benutzer können den Rolle Verleih zugeordnet werden 
\end_layout

\begin_layout Standard
#25 Benutzer können sich mit Benutzername und Passwort anmelden 
\end_layout

\begin_layout Subsection
technische Anforderungen
\end_layout

\begin_layout Subsubsection
Kernziele
\end_layout

\begin_layout Standard
#46 Die Anzeige der angefragten Filme ist in 2 Sekunden aufgebaut
\end_layout

\begin_layout Standard
#47 Das äquivalent zur aktuell verwendeten 'Heiligen Tabelle' ist in 10
 Sekunden exportbereit
\end_layout

\begin_layout Standard
#33 Firefox Version 39 wird unterstützt
\end_layout

\begin_layout Standard
#34 Windows Internet Explorer Version 10 wird unterstützt
\end_layout

\begin_layout Standard
#35 Crome Version 43 wird unterstützt
\end_layout

\begin_layout Standard
#36 Safari Version 7 wird unterstützt
\end_layout

\begin_layout Standard
#37 Eine SQL fähige Datenbank wird verwendet
\end_layout

\begin_layout Standard
#38 Die auf dem Server benötigte Software ist Open-Source und kostenfrei
\end_layout

\begin_layout Standard
#32 Es gehen durch einen Stromausfall keine abgeschlossenen und durch das
 Interface bestätigten Informationen verloren
\end_layout

\begin_layout Subsubsection
Unterziele
\end_layout

\begin_layout Standard
#31 Es steht ein Anwenderhandbuch zur Verfügung.
 
\end_layout

\begin_layout Section
Produktdaten
\end_layout

\begin_layout Subsection
Abspielring
\end_layout

\begin_layout Standard
ID, Name, Leinwandnummer, Ansprechpartner (Textfeld 255 Zeichen), Email
 Ansprechpartner
\end_layout

\begin_layout Subsection
Verleih
\end_layout

\begin_layout Standard
ID, Name, Ansprechpartner (Textfeld 255 Zeichen), Email Ansprechpartner
\end_layout

\begin_layout Subsection
Spielstätten
\end_layout

\begin_layout Standard
ID, ID Abspielring, Name, Ansprechpartner (Textfeld 255 Zeichen), Email
 Ansprechpartner
\end_layout

\begin_layout Subsection
Film
\end_layout

\begin_layout Standard
ID, Filmname, Jahr, ID des Verleihs
\end_layout

\begin_layout Subsection
Filmwunsch
\end_layout

\begin_layout Standard
ID, ID des Films, ID der Spielstätten, Datum
\end_layout

\begin_layout Subsection
Benutzer
\end_layout

\begin_layout Standard
ID, Name, Email, Textfeld 255 Zeichen, Benutzergruppen
\end_layout

\begin_layout Subsection
Benutzergruppen
\end_layout

\begin_layout Standard
ID Abspielring, ID Spielstätte, Benutzerrollen (Spielstätte, Koordination,
 Verleih)
\end_layout

\begin_layout Subsection
Buchungsdaten
\end_layout

\begin_layout Subsubsection
Das Buchungsfenster zum Film
\end_layout

\begin_layout Standard
ID, ID des Film, ID des Abspielringes, Startdatum, Enddatum, Wartezeit,
 Bestätigungsstatus
\end_layout

\begin_layout Subsubsection
Spielstätten buchen aus dem Buchungsfenster
\end_layout

\begin_layout Standard
ID, ID des Buchungsfenster, ID der Spielstätte, Datum, Versand von, Versand
 nach, Besucherzahlen nach Eintrittspreise
\end_layout

\begin_layout Section
Entwicklungsumgebung
\end_layout

\begin_layout Standard
Entwickelt wird in einer Java-EE Umgebung.
 Eine beispielhafte Installationsanleitung erfolgt nun für Ubuntu 14.04.
 Diese Anleitung schließt das Frontend mit ein, wobei dieses auch separat
 installiert (siehe 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Installation-Entw-frontend"

\end_inset

) werden kann.
 Es werden folgenden Komponenten benötigt:
\end_layout

\begin_layout Subsection
Datenbank
\begin_inset CommandInset label
LatexCommand label
name "sub:Datenbank"

\end_inset


\end_layout

\begin_layout Standard
Das Programm ist unter MySQL
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Installationsanleitung: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://wiki.ubuntuusers.de/MySQL
\end_layout

\end_inset


\end_layout

\end_inset

 und PostgreSQL
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Installationsanleitung: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://wiki.ubuntuusers.de/PostgreSQL
\end_layout

\end_inset


\end_layout

\end_inset

 lauffähig.
 Diese Installationsanleitung berücksichtigt nur PostgreSQL.
 Nach der Installation eines Datenbankservers ist der Benutzer 
\begin_inset Quotes gld
\end_inset

ffk
\begin_inset Quotes grd
\end_inset

 mit dem Passwort 
\begin_inset Quotes gld
\end_inset

ffk
\begin_inset Quotes grd
\end_inset

 einzurichten.
\begin_inset Foot
status open

\begin_layout Plain Layout
sudo -u postgres createuser -P -d ffk 
\end_layout

\end_inset

 Anschließend wird diesem Benutzer eine Datenbank 
\begin_inset Quotes gld
\end_inset

ffk
\begin_inset Quotes grd
\end_inset

 mit allen Rechten zugewiesen.
\begin_inset Foot
status open

\begin_layout Plain Layout
sudo -u postgres createdb -O ffk ffk
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
JDK - Java Development Kit
\end_layout

\begin_layout Standard
Es wird die Version Java 8 von Oracle
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Installationsanleitung: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://wiki.ubuntuusers.de/Java/Oracle_Java
\end_layout

\end_inset


\end_layout

\end_inset

 verwendet.
 Dieses befindet sich nicht in den Paketquellen und wird händisch installiert.
 Entscheidend ist, dass sich die passende Version (32 oder 64 bit) am Ende
 im Verzeichnis /opt/Oracle_Java/jdk1.8.x befindet.
\end_layout

\begin_layout Subsection
Middleware
\begin_inset CommandInset label
LatexCommand label
name "sub:Middleware"

\end_inset


\end_layout

\begin_layout Standard
Es wird der JBoss Nachfolger Wildfly verwendet.
 Dieser befindet sich nicht in den Paketquellen und muss händisch installiert
 werden.
 
\end_layout

\begin_layout Enumerate
Offenen Sie dafür ein Terminal und wechseln in den Benutzer root
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
sudo -s
\end_layout

\end_inset

 .
 Wechseln Sie anschließend in das Zielverzeichnis
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
cd /opt
\end_layout

\end_inset

 '
\family typewriter
/opt
\family default
'.
\end_layout

\begin_layout Enumerate
Laden sie Wildfly in der Version 9.0.2
\begin_inset Foot
status open

\begin_layout Plain Layout
wget http://download.jboss.org/wildfly/9.0.2.Final/wildfly-9.0.2.Final.tar.gz
\end_layout

\end_inset

 von 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

www.wildfly.org
\end_layout

\end_inset

 herunter und entpacken
\begin_inset Foot
status open

\begin_layout Plain Layout
tar xzf wildfly-9.0.2.Final.tar.gz 
\end_layout

\end_inset

 es.
\end_layout

\begin_layout Enumerate
Wechseln Sie in das Verzeichnis
\begin_inset Foot
status open

\begin_layout Plain Layout
cd /opt/wildfly-9.0.2.Final/bin/
\end_layout

\end_inset

 /opt/wildfly-9.0.2.Final/bin und erstellen den Managementuser
\begin_inset Foot
status open

\begin_layout Plain Layout
./add-user.sh 
\end_layout

\end_inset

 
\begin_inset Quotes gld
\end_inset

ffk
\begin_inset Quotes grd
\end_inset

 mit dem Passwort 
\begin_inset Quotes gld
\end_inset

ffk
\begin_inset Quotes grd
\end_inset

.
 Der Benutzer benötigt keine weiteren Rechte.
\end_layout

\begin_layout Enumerate
Starten Sie den Server
\begin_inset Foot
status open

\begin_layout Plain Layout
./standalone.sh 
\begin_inset ERT
status open

\begin_layout Plain Layout

-{}-
\end_layout

\end_inset

server-config=standalone-full.xml
\end_layout

\end_inset

 im 'standalone-full' Modus und falls der Server nicht unter 'localhost'
 zu erreichen ist mit zugeordneter IP Adresse: -bmanagement=IP.
\end_layout

\begin_layout Enumerate
Öffnen Sie eine neues Root-Terminal und wechseln ins wildfly Verzeichnis
\begin_inset Foot
status open

\begin_layout Plain Layout
cd /opt/wildfly-9.0.2.Final/bin
\end_layout

\end_inset

 und laden den aktuellen Datenbanktreiber
\begin_inset Foot
status open

\begin_layout Plain Layout
wget https://jdbc.postgresql.org/download/postgresql-9.4.1207.jar
\end_layout

\end_inset

 für Java 8, also JDBC 42, von 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

www.postgresql.org
\end_layout

\end_inset

 herunter.
\end_layout

\begin_layout Enumerate
Starten Sie nun im Terminal die CLI
\begin_inset Foot
status open

\begin_layout Plain Layout
./jboss-cli.sh
\end_layout

\end_inset

 Konsole und fügen den Datenbanktreiber hinzu.
\begin_inset Foot
status open

\begin_layout Plain Layout

\family typewriter
module add --name=org.postgres --dependencies=javax.api,javax.transaction.api
 --slot=main --resources=/opt/wildfly-9.0.2.Final/postgresql-9.4.1207.jar
\end_layout

\end_inset

 
\end_layout

\begin_layout Enumerate
Im nächsten Schritt wird der Treiber aktiviert.
 
\family typewriter

\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\family typewriter
/subsystem=datasources/jdbc-driver=postgres:add( driver-name="postgres"
 ,driver-module-name="org.postgres",driver-class-name=org.postgresql.Driver)
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Nun lassen wir uns alle Treiber anzeigen.
\family typewriter

\begin_inset Foot
status open

\begin_layout Plain Layout

\family typewriter
/subsystem=datasources:installed-drivers-list
\end_layout

\end_inset


\family default
 Diese Informationen werden in Punkt 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Step-2/3:-JDBC"

\end_inset

 benötigt werden.
\end_layout

\begin_layout Enumerate
Melden Sie sich nun über den Webbrowser unter 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://localhost:9990/
\end_layout

\end_inset

 an.
\end_layout

\begin_layout Enumerate
Erstellen Sie ein Datenquelle
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://localhost:9990/console/App.html
\backslash
#profile
\end_layout

\end_inset


\end_layout

\end_inset

 unter Subsystems → Datasources → Non-XA → Add → PostgreSQL Datasource
\end_layout

\begin_deeper
\begin_layout Enumerate
Datasource Attributes: 
\begin_inset Newline newline
\end_inset

Name: 
\begin_inset Quotes gld
\end_inset


\family typewriter
PostgresDS
\family default

\begin_inset Quotes grd
\end_inset

.
 
\begin_inset Newline newline
\end_inset

JNDI Name: 
\begin_inset Quotes gld
\end_inset

java:jboss/datasource/PostgresDS
\begin_inset Quotes grd
\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Bei wildfly Version 10: java:/PostgresDS 
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
JDBC Driver
\begin_inset CommandInset label
LatexCommand label
name "enu:Step-2/3:-JDBC"

\end_inset

: 
\begin_inset Newline newline
\end_inset

Name: 
\begin_inset Quotes gld
\end_inset


\family typewriter
postgres
\family default

\begin_inset Quotes grd
\end_inset


\begin_inset Newline newline
\end_inset

Module Name: 
\begin_inset Quotes grd
\end_inset


\family typewriter
org.postgres
\family default

\begin_inset Quotes grd
\end_inset

 
\begin_inset Newline newline
\end_inset

Driver Class: 
\begin_inset Quotes grd
\end_inset


\family typewriter
org.postgresql.Driver
\family default

\begin_inset Quotes grd
\end_inset


\end_layout

\begin_layout Enumerate
Connection Settings: 
\begin_inset Newline newline
\end_inset

Connection URL: 
\family typewriter

\begin_inset Quotes gld
\end_inset

jdbc:postgresql://localhost:5432/ffk
\family default

\begin_inset Quotes grd
\end_inset


\begin_inset Newline newline
\end_inset

Username und Passwort wie unter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenbank"

\end_inset

 vergeben.
 
\begin_inset Newline newline
\end_inset

Security Domain bleibt leer
\end_layout

\end_deeper
\begin_layout Enumerate
Testen Sie die Verbindung zur Datenbank und speichern Sie die Einstellung.
 Sie wird unter dem JNDI Name '
\family typewriter
java:/PostgresDS
\family default
' im JPA Content AprototypeEAR konfiguriert und steht damit der Percistence
 Unit zur Verfügung.
\end_layout

\begin_layout Enumerate
Stellen Sie die Dateirechte von Wildfly auf ihren Benutzername ein.
\begin_inset Foot
status open

\begin_layout Plain Layout
chown -R wildfly:wildfly /opt/wildfly-9.0.2.Final/
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vorsicht bei Updates des Servers! Um JSON nutzen zu können, muss im EJB
 Verzeichnis der Entwicklungsumgebung die gleiche '
\family typewriter
jackson-annotations-2.x.y.jar
\family default
' wie auf dem Wildfly Server verwendet werden.
 Am besten suchen sie im Basisverzeichnis des Servers danach.
\begin_inset Foot
status open

\begin_layout Plain Layout
find .
 -name "jackson-annotations-*"
\end_layout

\end_inset

 Sie muss im Java Build Path unter Libraries eingebunden sein.
\end_layout

\begin_layout Enumerate
Analog muss, um Websockets zu verwenden, die '
\family typewriter
jboss-websocket-api_1.1_spec-1.1.1.Final.jar
\family default
' des Wildfly-Servers im Eclipse Webordner eingebunden sein.
\end_layout

\begin_layout Subsection
IDE - Integrierte Entwicklungsumgebung
\begin_inset CommandInset label
LatexCommand label
name "sub:IDE-Backend"

\end_inset


\end_layout

\begin_layout Standard
Nun fehlt nur noch die Entwicklungsumgebung.
 Auf Grund der besseren UML Unterstützung fällt die Wahl auf Eclipse.
\end_layout

\begin_layout Enumerate
Laden Sie die 
\begin_inset CommandInset href
LatexCommand href
name "Eclipse"
target "www.eclipse.org"

\end_inset

 Mars IDE für Ihre Plattform
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/mars1
\end_layout

\end_inset


\end_layout

\end_inset

 herunter und entpacken es in Ihrem Homeverzeichnis.
\end_layout

\begin_layout Enumerate
Starten Sie das Programm und nehmen die default Einstellungen.
\end_layout

\begin_layout Enumerate
Gehen Sie auf Help → Eclipse Marketplace und installieren Sie 
\end_layout

\begin_deeper
\begin_layout Enumerate
die 'JBoss Tools' um mit dem Wildfly Server zu kommunizieren.
\end_layout

\begin_layout Enumerate
'AngularJS' und deinstallieren die Angularunterstützung von 'JBoss'
\end_layout

\begin_layout Enumerate
'Object Aid Class Diagramm' zur automatischen reverse generierung der Klassendia
gramme nach folgender Anleitung 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.objectaid.com/installation
\end_layout

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
es muss nur das Class Diagramm installiert werden
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
'UML Designer 5' zum anzeigen und zeichnen der Use-Case Diagramme wird über
 'Help'→'Eclipse Marketplace'→'Obeo Marketplace' installiert.
\end_layout

\end_deeper
\begin_layout Enumerate
Gehen Sie auf 'File' → 'Import Projects' → 'existing Project into Workspace'
 und importieren sie den Ordner oder das zip File 'Aprototype'
\end_layout

\begin_layout Standard
=======./modules/system/layers/base/javax/websocket/api/main/jboss-websocket-api_
1.1_spec-1.1.1.Final.jar 
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Testumgebung-auf-Debian"

\end_inset

Testumgebung auf Debian jessie
\end_layout

\begin_layout Subsubsection
Java 8 installieren
\end_layout

\begin_layout Standard
Um Java 8 zu installieren müssen die Backports in den Quellen enthalten
 sein.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://backports.debian.org/Instructions/ dann openjdk-8-jre
\end_layout

\end_inset


\end_layout

\end_inset

 Das benötigte Paket heißt openjdk-8
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
apt-get install openjdk-8
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
Postgresql installieren
\end_layout

\begin_layout Standard
Folgen sie der Anleitung unter Punkt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Datenbank"

\end_inset

, aber wählen Sie diesmal ein sicheres Passwort.
\end_layout

\begin_layout Subsubsection
Wildflyserver installieren
\end_layout

\begin_layout Standard
Gehen Sie bis Punkt 3 wie unter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Middleware"

\end_inset

 vor.
 Dann erstellen sie in '/opt' einen symbolischen Link
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
ln -s wildfly-9.0.2.Final wildfly
\end_layout

\end_inset

, damit der Benutzer wildfly auch nach etwaigen Updates ein sicheres Homeverzeic
hnis hat.
 Der Benutzer wildfly wird wie im Script 
\family typewriter
'.bin/init.d/wildfly-init-debian.sh
\family default
'
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
adduser --system --group --no-create-home --home /opt/wildfly --disabled-login
 wildfly
\end_layout

\end_inset

 angegeben angelegt.
 Anschließend werden die Dateirechte dem Benutzer wildfly zugeordnet.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
chown -R wildfly:wildfly /opt/wildfly/
\end_layout

\end_inset

 Wechseln sie nun in den Benutzer 'wildfly'
\begin_inset Foot
status open

\begin_layout Plain Layout
su wildfly
\end_layout

\end_inset

 und fahren mit Punkt 3 bis Punkt 11 fort, allerdings sollten Sie dieses
 mal ein sicheres Passwort für den Managementuser vergeben.
\end_layout

\begin_layout Standard
Nun müssen Sie noch das EAR File
\family typewriter

\begin_inset Foot
status open

\begin_layout Plain Layout
/opt/wildfly/standalone/deployments/Aprototype.ear
\end_layout

\end_inset


\family default
 auf den Server kopieren und das Deployment
\begin_inset Foot
status open

\begin_layout Plain Layout
touch /opt/wildfly/standalone/deployments/Aprototype.ear.dodeploy 
\end_layout

\end_inset

 starten.
 Nun den Wildflyserver mit der IP Adresse des Servers starten.
 
\family typewriter
'/standalone.sh 
\begin_inset ERT
status open

\begin_layout Plain Layout

-{}-
\end_layout

\end_inset

server-config=standalone-full.xml -b=185.82.23.131 -bmanagement=185.82.23.131'
\family default
 (zum einfachen Copy und Paste)
\begin_inset Foot
status open

\begin_layout Plain Layout
./standalone.sh 
\begin_inset ERT
status open

\begin_layout Plain Layout

-{}-
\end_layout

\end_inset

server-config=standalone-full.xml -b=185.82.23.131 -bmanagement=185.82.23.131
\end_layout

\end_inset

.
 Mit dem 
\family typewriter
'-b
\family default
' Schalter wird die IP des Servers festgelegt auf welchem der Server dann
 unter http://IP:8080 zu erreichen ist.
 Die Managementkonsole wurde mit dem 
\family typewriter
'--bmanagement
\family default
' Schalter festgelegt und hört am Port 9990.
 Auch darüber können Sie zu deployende Dateien hochladen.
\end_layout

\begin_layout Standard
War der Test erfolgreich ist nun nur noch der Service zu installieren, damit
 der Wildflyserver beim booten selbständig startet.
 Dazu muss das Skript 
\family typewriter
wildfly-init-debian.sh
\family default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
/opt/wildfly-9.0.2.Final/bin/init.d/wildfly-init-debian.sh
\end_layout

\end_inset

 noch leicht angepasst werden.
 Fügen sie in Zeile 22 JAVA_HOME
\begin_inset Foot
status open

\begin_layout Plain Layout
JAVA_HOME=$(readlink -f /usr/bin/java | sed "s:bin/java::") 
\end_layout

\end_inset

 ein.
 Auch die '
\family typewriter
JBOSS_CONFIG=standalone.xml
\family default
' muss noch in 
\family typewriter
'standalone-full.xml
\family default
' geändert werden, da sonst Funktionen wie cron nicht für die fertige Applikatio
n zur Verfügung stehen.
 
\end_layout

\begin_layout Standard
Anschließend wird das Skript nach 
\family typewriter
'/etc/init.d/wildfly
\family default
' kopiert.
 Debian kommt in dieser Version allerdings mit 'systemd' als neuen Init-Dienst
 und so muss noch eine letzte Datei erstellt
\begin_inset Foot
status open

\begin_layout Plain Layout
touch /etc/systemd/system/wildfly.service
\end_layout

\end_inset

 und mit Inhalt befüllt werden:
\end_layout

\begin_layout Standard
\noindent

\family typewriter
[Unit]
\begin_inset Newline newline
\end_inset

Description=Wildfly Server standalone-full
\end_layout

\begin_layout Standard
\noindent

\family typewriter
[Service]
\begin_inset Newline newline
\end_inset

ExecStart=/opt/wildfly/bin/standalone.sh --server-config=standalone-full.xml
 -b 185.82.23.131 -bmanagement=185.82.23.131 
\begin_inset Newline newline
\end_inset

ExecReload=/bin/kill -HUP $MAINPID 
\begin_inset Newline newline
\end_inset

KillMode=process 
\begin_inset Newline newline
\end_inset

Restart=always
\end_layout

\begin_layout Standard
\noindent

\family typewriter
[Install] 
\begin_inset Newline newline
\end_inset

WantedBy=multi-user.target
\end_layout

\begin_layout Standard
Der Dienst logged nun in 
\family typewriter
/var/log/syslog
\family default
.
\end_layout

\begin_layout Subsubsection
Neue Version deployen
\end_layout

\begin_layout Enumerate
In Eclipse mit einem Rechtsklick auf den Ordner Aprototype: Export → EAR
 File und einen Zielordner, z.B Downloads festlegen.
\end_layout

\begin_layout Enumerate
Die eben eingerichtete Testumgebung mit http://IP:9990 aufrufen, anmelden
 und den Reiter 'Deployments' anwählen.
\end_layout

\begin_layout Enumerate
Links 'Aprototype.ear' anwählen und dann über den kleinen Pfeil nach unten
 neben View 'replace' auswählen
\end_layout

\begin_layout Enumerate
Im nun folgenden Dialog das eben exportierte EAR File auswählen und auf
 Next drücken.
\end_layout

\begin_layout Enumerate
Alles weitere läuft nun automatisch ab, und die neue Version wird auf dem
 Server deployed.
\end_layout

\begin_layout Section
Zeitplan
\end_layout

\begin_layout Standard
Die Umsetzung erfolgt in 4 Modulen.
 Jedes hat einen Umfang von 150 Stunden.
\end_layout

\begin_layout Subsection
Modul 1 - Vorbereitung
\end_layout

\begin_layout Standard
Die Arbeitsprozesse werden erfasst.
 Dafür wird die Business Process Model and Notation (BPMN)
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.bpmn.org/
\end_layout

\end_inset


\end_layout

\end_inset

 der Version 2 verwendet.
\end_layout

\begin_layout Standard
Es werden die Anforderungsspezifikationen und das Pflichtenheft festgelegt.
\end_layout

\begin_layout Subsection
Modul 2 - Frontend
\end_layout

\begin_layout Standard
Es wird das HTML Gerüst für die Kernziele erstellt.
 Ein Bedienkonzept wird entwickelt.
 Die Umsetzung des Frontend erfolgt in der zuvor festgelegten Programmiersprache.
\end_layout

\begin_layout Subsection
Modul 3 - Frontend
\end_layout

\begin_layout Standard
Das Frontend wird in den Funktionen der Kernziele fertiggestellt.
 Die Schnittellen werden noch nicht an ein Backend angebunden, sondern laufen
 lokal im Dateisystem.
 Die Funktionen werden an Hand des Workflows dokumentiert.
 Es wird eine sichere Authentifizierung erarbeitet.
\end_layout

\begin_layout Subsection
Modul 4 - Backend
\end_layout

\begin_layout Standard
Das Backend wird erstellt.
 Dabei werden alle für das Frontend benötigte Schnittstellen zur Verfügung
 gestellt.
 Eine sichere Authentifizierung und das Speichern in einer Datenbank ist
 möglich.
 Die Dokumentation wird abgeschlossen.
 
\end_layout

\end_body
\end_document
